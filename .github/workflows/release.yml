name: Release
on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]

jobs:
  release:
    name: ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # On Linux, rusty_v8 does not yet support musl, only gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu

          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin

          # On Windows, rusty_v8 does not yet support arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set artifact name
        shell: bash
        run: |
          version="$(git describe --tags --match='v*.*.*' --always)"
          name="kaw-$version-${{ matrix.target }}"
          echo "ARTIFACT_NAME=$name" >> $GITHUB_ENV

          echo "version: $version"
          echo "artifact: $name"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Configure build dependencies
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Build binary
        run: cargo build --release --locked --target ${{ matrix.target }} --color=always --verbose

      - name: Package [*nix]
        if: runner.os != 'Windows'
        run: >
          tar -cv
          LICENSE README.md
          -C target/${{ matrix.target }}/release/ kaw
          | gzip --best > '${{ env.ARTIFACT_NAME }}.tar.gz'

      - name: Package [Windows]
        if: runner.os == 'Windows'
        run: >
          7z a ${{ env.ARTIFACT_NAME }}.zip
          LICENSE README.md
          ./target/${{ matrix.target }}/release/kaw.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.zip
            *.tar.gz

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.zip
            *.tar.gz

  update_brew_formula:
    name: Publish to Homebrew tap
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: mislav/bump-homebrew-formula-action@v3
        with:
          formula-name: kaw
          homebrew-tap: canac/homebrew-tap
          create-pullrequest: true
        env:
          COMMITTER_TOKEN: ${{ secrets.COMMITTER_TOKEN }}
